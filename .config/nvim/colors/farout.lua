vim.g.colors_name = "farout"

local p = {
  bg0         = "#0F0908",
  bg1         = "#1F1311",
  fg0         = "#E0CCAE",
  fg1         = "#ddc7a1",
  beige       = "#A4895C",
  beige1      = "#A4896f",
  light_brown = "#A67458",
  maroon      = "#8A4B53",
  gray        = "#6B4035",
  vinotinto   = "#66292F",
  red         = "#BF472C",
  orange      = "#D47D49",
  yellow      = "#F2A766",
  green       = "#a9b665",
  choco       = "#291916",
  black       = "#000000",
}

local highlight_groups = {
  Normal                    = { bg = p.bg0, fg = p.fg0 },
  FloatBorder               = { fg = p.gray },
  NormalFloat               = { fg = p.fg0 },
  Error                     = { fg = p.red },
  NonText                   = { fg = p.vinotinto },
  Comment                   = { fg = p.gray },
  Constant                  = { fg = p.fg1 },
  Identifier                = { fg = p.light_brown },
  Ignore                    = { fg = p.gray },
  PreProc                   = { fg = p.red },
  Special                   = { fg = p.beige1 },
  Statement                 = { fg = p.yellow },
  String                    = { fg = p.orange },
  Character                 = { fg = p.orange },
  Number                    = { fg = p.maroon },
  Function                  = { fg = p.red },
  Operator                  = { fg = p.light_brown },
  Delimiter                 = { fg = p.beige },
  Boolean                   = { fg = p.maroon },
  Type                      = { fg = p.red },
  Todo                      = { fg = p.fg1, bold = true },
  Underlined                = { underline = true },
  CursorLine                = { bg = p.bg1 },
  StatusLine                = { bg = p.choco, fg = p.light_brown },
  StatusLineNC              = { bg = p.choco, fg = p.gray },
  StatusLineTerm            = { link = "StatusLine" },
  StatusLineTermNC          = { link = "StatusLineNC" },
  VertSplit                 = { fg = p.bg1 },
  TabLine                   = { fg = p.gray },
  TabLineFill               = { bg = p.bg1, fg = p.fg1 },
  TabLineSel                = { fg = p.yellow },
  Folded                    = { fg = p.light_brown },
  FoldColumn                = { fg = p.vinotinto },
  Title                     = { fg = p.fg1, bold = true },
  LineNr                    = { fg = p.gray },
  CursorLineNr              = { fg = p.light_brown },
  qfLineNr                  = { fg = p.gray },
  helpLeadBlank             = { fg = p.fg1 },
  helpNormal                = { fg = p.fg1 },
  Visual                    = { bg = p.gray, fg = p.fg0 },
  VisualNOS                 = { bg = p.light_brown, fg = p.fg1 },

  Pmenu                     = { bg = p.choco, fg = p.light_brown },
  PmenuThumb                = { bg = p.vinotinto },
  PmenuSel                  = { bg = p.choco, fg = p.yellow },
  WildMenu                  = { fg = p.orange },
  SpecialKey                = { fg = p.beige1 },
  DiffAdd                   = { bg = p.choco, fg = p.beige },
  DiffChange                = { bg = p.choco, fg = p.vinotinto },
  DiffDelete                = { bg = p.choco, fg = p.red },
  DiffText                  = { bg = p.choco, fg = p.beige },

  IncSearch                 = { bg = p.light_brown, fg = p.bg0 },
  Search                    = { bg = p.light_brown, fg = p.bg0 },
  Directory                 = { fg = p.fg1 },
  MatchParen                = { bg = p.light_brown, fg = p.yellow, bold = true },
  SpellBad                  = { bg = p.vinotinto, sp = p.vinotinto },
  SpellCap                  = { bg = p.choco, sp = p.light_brown },
  SpellLocal                = { bg = p.beige, sp = p.beige },
  SpellRare                 = { bg = p.choco, sp = p.light_brown },
  ColorColumn               = { bg = p.bg1 },
  signColumn                = { fg = p.light_brown },
  ErrorMsg                  = { bg = p.vinotinto, fg = p.fg1 },
  ModeMsg                   = { fg = p.yellow, bold = true },
  MoreMsg                   = { fg = p.light_brown },
  Question                  = { fg = p.yellow },
  WarningMsg                = { bg = p.bg1, fg = p.yellow, bold = true },
  Cursor                    = { reverse = true },
  CursorColumn              = { bg = p.bg1 },
  CurrentWord               = { bg = p.choco },

  LspReferenceText          = { bg = p.choco },
  LspReferenceRead          = { bg = p.choco },
  LspReferenceWrite         = { bg = p.choco },

  DiagnosticFloatingError    = { link = "ErrorFloat" },
  DiagnosticFloatingWarn     = { link = "WarningFloat" },
  DiagnosticFloatingInfo     = { link = "InfoFloat" },
  DiagnosticFloatingHint     = { link = "HintFloat" },
  DiagnosticError            = { link = "ErrorText" },
  DiagnosticWarn             = { link = "WarningText" },
  DiagnosticInfo             = { link = "InfoText" },
  DiagnosticHint             = { link = "HintText" },
  DiagnosticVirtualTextError = { link = "VirtualTextError" },
  DiagnosticVirtualTextWarn  = { link = "VirtualTextWarning" },
  DiagnosticVirtualTextInfo  = { link = "VirtualTextInfo" },
  DiagnosticVirtualTextHint  = { link = "VirtualTextHint" },
  DiagnosticUnderlineError   = { link = "ErrorText" },
  DiagnosticUnderlineWarn    = { link = "WarningText" },
  DiagnosticUnderlineInfo    = { link = "InfoText" },
  DiagnosticUnderlineHint    = { link = "HintText" },
  DiagnosticSignError        = { link = "RedSign" },
  DiagnosticSignWarn         = { link = "YellowSign" },
  DiagnosticSignInfo         = { link = "BrownSign" },
  DiagnosticSignHint         = { link = "GraySign" },
  TermCursor                 = { link = "Cursor" },
  healthError                = { fg = p.red },
  healthSuccess              = { fg = p.light_brown },
  healthWarning              = { fg = p.yellow },

  RedSign                    = { fg = p.red, bg = p.bg1 },
  OrangeSign                 = { fg = p.orange, bg = p.bg1 },
  YellowSign                 = { fg = p.yellow, bg = p.bg1 },
  BrownSign                  = { fg = p.light_brown, bg = p.bg1 },
  GraySign                   = { fg = p.gray, bg = p.bg1 },

  ErrorText                  = { undercurl = true },
  WarningText                = { undercurl = true },
  InfoText                   = { underline = true },
  HintText                   = { underline = true },

  ErrorLine   = { bg = p.red },
  WarningLine = { bg = p.yellow },
  InfoLine    = { bg = p.light_brown },
  HintLine    = { bg = p.gray },

  VirtualTextWarning = { fg = p.yellow },
  VirtualTextError   = { fg = p.red },
  VirtualTextInfo    = { fg = p.light_brown },
  VirtualTextHint    = { fg = p.gray },

  ErrorFloat   = { fg = p.red, bg = p.bg0},
  WarningFloat = { fg = p.yellow, bg = p.bg0},
  InfoFloat    = { fg = p.light_brown, bg = p.bg0 },
  HintFloat    = { fg = p.gray, bg = p.bg0 },

  helpNote                  = { fg = p.green, bold = true },
  helpHeadline              = { fg = p.red, bold = true },
  helpHeader                = { fg = p.orange, bold = true },
  helpTSError               = { fg = p.red, bold = true },
  helpURL                   = { fg = p.green, underline = true },
  helpHyperTextEntry        = { fg = p.yellow, bold = true },
  helpTSURI                 = { fg = p.green, bold = true },
  helpTSLiteral             = { fg = p.green, bold = true },
  helpHyperTextJump         = { fg = p.yellow },
  helpCommand               = { fg = p.orange },
  helpExample               = { fg = p.light_brown },
  helpSpecial               = { fg = p.yellow },
  helpSectionDelim          = { fg = p.gray },

  NeotestPassed    = { fg = p.green, bg = p.choco },
  NeotestFailed    = { fg = p.red, bg = p.choco },
  NeotestRunning   = { fg = p.yellow, bg = p.choco },
  NeotestSkipped   = { bg = p.choco },

  CmpItemAbbrMatch         = { fg = p.green, bold = true },
  CmpItemAbbrMatchFuzzy    = { fg = p.green, bold = true },
  CmpItemAbbr              = { fg = p.fg0 },
  CmpItemAbbrDeprecated    = { fg = p.fg0 },
  CmpItemMenu              = { fg = p.fg0 },
  CmpItemKindText          = { fg = p.fg0 },
  CmpItemKind              = { fg = p.red },
  CmpItemKindVariable      = { fg = p.red },
  CmpItemKindProperty      = { fg = p.red },
  CmpItemKindKeyword       = { fg = p.red },
  CmpItemKindConstant      = { fg = p.red },
  CmpItemKindMethod        = { fg = p.green },
  CmpItemKindFunction      = { fg = p.green },
  CmpItemKindConstructor   = { fg = p.green },
  CmpItemKindField         = { fg = p.green },
  CmpItemKindClass         = { fg = p.yellow },
  CmpItemKindInterface     = { fg = p.yellow },
  CmpItemKindModule        = { fg = p.yellow },
  CmpItemKindEnum          = { fg = p.yellow },
  CmpItemKindEnumMember    = { fg = p.yellow },
  CmpItemKindStruct        = { fg = p.yellow },
  CmpItemKindTypeParameter = { fg = p.yellow },
  CmpItemKindUnit          = { fg = p.maroon },
  CmpItemKindValue         = { fg = p.maroon },
  CmpItemKindSnippet       = { fg = p.maroon },
  CmpItemKindColor         = { fg = p.maroon },
  CmpItemKindReference     = { fg = p.maroon },
  CmpItemKindFolder        = { fg = p.orange },
  CmpItemKindFile          = { fg = p.orange },
  CmpItemKindEvent         = { fg = p.orange },
  CmpItemKindOperator      = { fg = p.orange },

  NvimTreeSymlink                   = { fg = p.gray },
  NvimTreeFolderName                = { fg = p.orange },
  NvimTreeRootFolder                = { fg = p.yellow },
  NvimTreeFolderIcon                = { fg = p.orange },
  NvimTreeEmptyFolderName           = { fg = p.gray },
  NvimTreeOpenedFolderName          = { fg = p.orange },
  NvimTreeExecFile                  = { fg = p.light_brown },
  NvimTreeOpenedFile                = { fg = p.light_brown },
  NvimTreeSpecialFile               = { fg = p.light_brown },
  NvimTreeImageFile                 = { fg = p.light_brown },
  NvimTreeMarkdownFile              = { fg = p.light_brown },
  NvimTreeNormal                    = { fg = p.light_brown },
  NvimTreeFileIcon                  = { fg = p.yellow, bg = p.bg0 },
  -- NvimTreeIndentMarker              = { link = 'Grey' },
  -- NvimTreeGitDirty                  = { link = 'Yellow' },
  -- NvimTreeGitStaged                 = { link = 'Green' },
  -- NvimTreeGitMerge                  = { link = 'Orange' },
  -- NvimTreeGitRenamed                = { link = 'Purple' },
  -- NvimTreeGitNew                    = { link = 'Aqua' },
  -- NvimTreeGitDeleted                = { link = 'Red' },
  -- NvimTreeLspDiagnosticsError       = { link = 'RedSign' },
  -- NvimTreeLspDiagnosticsWarning     = { link = 'YellowSign' },
  -- NvimTreeLspDiagnosticsInformation = { link = 'BlueSign' },
  -- NvimTreeLspDiagnosticsHint        = { link = 'GreenSign' },

  TelescopeBorder = { fg = p.gray },

  PackageInfoOutdatedVersion    = { fg = p.red },
  PackageInfoUptodateVersion    = { fg = p.gray },

  InclineNormalNC = { fg = p.beige },

  MatchParenCur = { bold = true },
  MatchWord     = { underline = true },
  MatchWordCur  = { underline = true },

  ["@method.call"]          = { fg = p.red, italic = true },
  ["@lsp.type.method"]      = { fg = p.red, italic = true },
}

for group_name, group_settings in pairs(highlight_groups) do
  vim.api.nvim_set_hl(0, group_name, group_settings)
end
