vim.g.colors_name = "micolor"

local p = {
  bg0               = "#282828", -- 235},
  bg1               = "#32302f", -- 236},
  bg2               = "#45403d", -- 237},
  bg3               = "#5a524c", -- 239},
  bg4               = "#3a3735", -- 236},
  bg_diff_green     = "#34381b", -- 22},
  bg_diff_red       = "#402120", -- 52},
  bg_diff_blue      = "#0e363e", -- 17},
  fg_diff_text_blue = "#154c5e", -- 240},
  bg_visual_green   = "#3b4439", -- 22},
  bg_visual_red     = "#4c3432", -- 52},
  bg_visual_blue    = "#374141", -- 17},
  bg_visual_yellow  = "#4f422e", -- 94},
  bg_current_word   = "#3c3836", -- 237},
  fg0               = "#d4be98", -- 223},
  fg1               = "#ddc7a1", -- 223},
  red               = "#ea6962", -- 167},
  orange            = "#e78a4e", -- 208},
  yellow            = "#d8a657", -- 214},
  green             = "#a9b665", -- 142},
  aqua              = "#89b482", -- 108},
  blue              = "#7daea3", -- 109},
  purple            = "#d3869b", -- 175},
  grey0             = "#7c6f64", -- 243},
  grey1             = "#928374", -- 245},
  grey2             = "#a89984", -- 246},
}

local highlight_groups = {
  Normal                     = { fg = p.fg0, bg = p.bg0 },
  Terminal                   = { fg = p.fg0, bg = p.bg0 },
  EndOfBuffer                = { fg = p.bg3, bg = p.bg0 },
  Folded                     = { fg = p.grey1, bg = p.bg1 },
  ToolbarLine                = { fg = p.fg1, bg = p.bg2 },
  SignColumn                 = { fg = p.fg0, bg = p.bg1 },
  FoldColumn                 = { fg = p.grey1, bg = p.bg1 },
  IncSearch                  = { fg = p.bg0, bg = p.red },
  Search                     = { fg = p.bg0, bg = p.green },
  CurrentWord                = { bg = p.bg_current_word },
  CurSearch                  = { bg = p.bg_current_word },
  ColorColumn                = { bg = p.bg1 },
  Conceal                    = { fg = p.grey0 },
  Cursor                     = { reverse = true },

  LspReferenceText           = { bg = p.bg3 },
  LspReferenceRead           = { bg = p.bg3 },
  LspReferenceWrite          = { bg = p.bg3 },

  vCursor                    = { link = "Cursor" },
  iCursor                    = { link = "Cursor" },
  lCursor                    = { link = "Cursor" },
  CursorIM                   = { link = "Cursor" },

  CursorLine   = { bg = p.bg1 },
  CursorColumn = { bg = p.bg1 },
  CursorLineNr = { fg = p.grey1, bg = p.bg1},
  LineNr       = { fg = p.grey0 },

  DiffAdd                    = { bg = p.bg_diff_green },
  DiffChange                 = { bg = p.bg_diff_blue },
  DiffDelete                 = { bg = p.bg_diff_red },
  DiffText                   = { bg = p.fg_diff_text_blue },
  Directory                  = { fg = p.green },
  ErrorMsg                   = { fg = p.red, bold = true, underline = true },
  WarningMsg                 = { fg = p.yellow, bold = true },
  ModeMsg                    = { fg = p.fg0, bold = true },
  MoreMsg                    = { fg = p.yellow, bold = true },
  MatchParen                 = { bg = p.bg3 },
  NonText                    = { fg = p.bg3 },
  Whitespace                 = { fg = p.bg3 },
  SpecialKey                 = { fg = p.bg3 },
  Pmenu                      = { fg = p.fg1, bg = p.bg2 },
  PmenuSbar                  = { bg = p.bg2 },
  PmenuSel                   = { fg = p.bg2, bg = p.grey2 },

  WildMenu                   = { link = "PmenuSel" },

  PmenuThumb                 = { bg = p.grey0 },
  NormalFloat                = { fg = p.fg1, bg = p.bg2 },
  Question                   = { fg = p.yellow },
  SpellBad                   = { undercurl = true },
  SpellCap                   = { undercurl = true },
  SpellLocal                 = { undercurl = true },
  SpellRare                  = { undercurl = true },
  StatusLine                 = { fg = p.fg1, bg = p.bg4 },
  StatusLineTerm             = { fg = p.fg1, bg = p.bg4 },
  StatusLineNC               = { fg = p.grey1, bg = p.bg4 },
  StatusLineTermNC           = { fg = p.grey1, bg = p.bg4 },
  TabLine                    = { fg = p.fg1, bg = p.bg3 },
  TabLineFill                = { fg = p.fg1, bg = p.bg4 },
  TabLineSel                 = { fg = p.bg0, bg = p.grey2 },

  VertSplit                  = { fg = p.bg3 },
  Visual                     = { bg = p.bg2 },
  VisualNOS                  = { bg = p.bg2 },
  QuickFixLine               = { fg = p.purple, bold = true },
  Debug                      = { fg = p.orange },
  debugPC                    = { fg = p.bg0, bg = p.green },
  debugBreakpoint            = { fg = p.bg0, bg = p.red },
  ToolbarButton              = { fg = p.purple, bg = p.grey2 },
  Substitute                 = { fg = p.bg0, bg = p.yellow },

  DiagnosticFloatingError    = { link = "ErrorFloat" },
  DiagnosticFloatingWarn     = { link = "WarningFloat" },
  DiagnosticFloatingInfo     = { link = "InfoFloat" },
  DiagnosticFloatingHint     = { link = "HintFloat" },
  DiagnosticError            = { link = "ErrorText" },
  DiagnosticWarn             = { link = "WarningText" },
  DiagnosticInfo             = { link = "InfoText" },
  DiagnosticHint             = { link = "HintText" },
  DiagnosticVirtualTextError = { link = "VirtualTextError" },
  DiagnosticVirtualTextWarn  = { link = "VirtualTextWarning" },
  DiagnosticVirtualTextInfo  = { link = "VirtualTextInfo" },
  DiagnosticVirtualTextHint  = { link = "VirtualTextHint" },
  DiagnosticUnderlineError   = { link = "ErrorText" },
  DiagnosticUnderlineWarn    = { link = "WarningText" },
  DiagnosticUnderlineInfo    = { link = "InfoText" },
  DiagnosticUnderlineHint    = { link = "HintText" },
  DiagnosticSignError        = { link = "RedSign" },
  DiagnosticSignWarn         = { link = "YellowSign" },
  DiagnosticSignInfo         = { link = "BlueSign" },
  DiagnosticSignHint         = { link = "AquaSign" },
  TermCursor                 = { link = "Cursor" },
  healthError                = { link = "Red" },
  healthSuccess              = { link = "Green" },
  healthWarning              = { link = "Yellow" },

  Boolean                    = { fg = p.purple },
  Number                     = { fg = p.purple },
  Float                      = { fg = p.purple },

  PreProc                    = { fg = p.purple, italic = true },
  PreCondit                  = { fg = p.purple, italic = true },
  Include                    = { fg = p.purple, italic = true },
  Define                     = { fg = p.purple, italic = true },
  Conditional                = { fg = p.red, italic = true },
  Repeat                     = { fg = p.red, italic = true },
  Keyword                    = { fg = p.red, italic = true },
  Typedef                    = { fg = p.red, italic = true },
  Exception                  = { fg = p.red, italic = true },
  Statement                  = { fg = p.red, italic = true },

  Error                      = { fg = p.red },
  StorageClass               = { fg = p.orange },
  Tag                        = { fg = p.orange },
  Label                      = { fg = p.orange },
  Structure                  = { fg = p.orange },
  Operator                   = { fg = p.orange },
  Title                      = { fg = p.orange, bold = true },
  Special                    = { fg = p.yellow },
  SpecialChar                = { fg = p.yellow },
  Type                       = { fg = p.yellow },

  Function                   = { fg = p.green, bold = true },

  String                     = { fg = p.green },
  Character                  = { fg = p.green },
  Constant                   = { fg = p.aqua },
  Macro                      = { fg = p.aqua },
  Identifier                 = { fg = p.blue },

  Comment                    = { fg = p.grey1, italic = true },
  SpecialComment             = { fg = p.grey1, italic = true },
  Todo                       = { fg = p.purple, italic = true },

  Delimiter                  = { fg = p.fg0 },
  Ignore                     = { fg = p.grey1 },
  Underlined                 = { underline = true },

  Fg                         = { fg = p.fg0 },
  Grey                       = { fg = p.grey1 },
  Red                        = { fg = p.red },
  Orange                     = { fg = p.orange },
  Yellow                     = { fg = p.yellow },
  Green                      = { fg = p.green },
  Aqua                       = { fg = p.aqua },
  Blue                       = { fg = p.blue },
  Purple                     = { fg = p.purple },

  RedItalic                  = { fg = p.red, italic = true },
  OrangeItalic               = { fg = p.orange, italic = true },
  YellowItalic               = { fg = p.yellow, italic = true },
  GreenItalic                = { fg = p.green, italic = true },
  AquaItalic                 = { fg = p.aqua, italic = true },
  BlueItalic                 = { fg = p.blue, italic = true },
  PurpleItalic               = { fg = p.purple, italic = true },

  RedBold                    = { fg = p.red, bold = true },
  OrangeBold                 = { fg = p.orange, bold = true },
  YellowBold                 = { fg = p.yellow, bold = true },
  GreenBold                  = { fg = p.green, bold = true },
  AquaBold                   = { fg = p.aqua, bold = true },
  BlueBold                   = { fg = p.blue, bold = true },
  PurpleBold                 = { fg = p.purple, bold = true },

  RedSign                    = { fg = p.red, bg = p.bg1 },
  OrangeSign                 = { fg = p.orange, bg = p.bg1 },
  YellowSign                 = { fg = p.yellow, bg = p.bg1 },
  GreenSign                  = { fg = p.green, bg = p.bg1 },
  AquaSign                   = { fg = p.aqua, bg = p.bg1 },
  BlueSign                   = { fg = p.blue, bg = p.bg1 },
  PurpleSign                 = { fg = p.purple, bg = p.bg1 },

  ErrorText                  = { bg = p.bg_visual_red, undercurl = true },
  WarningText                = { bg = p.bg_visual_yellow, undercurl = true },
  InfoText                   = { bg = p.bg_visual_blue, underline = true },
  HintText                   = { bg = p.bg_visual_green, underline = true },

  ErrorLine   = { bg = p.bg_visual_red },
  WarningLine = { bg = p.bg_visual_yellow },
  InfoLine    = { bg = p.bg_visual_blue },
  HintLine    = { bg = p.bg_visual_green },

  VirtualTextWarning = { link = 'Yellow' },
  VirtualTextError   = { link = 'Red' },
  VirtualTextInfo    = { link = 'Blue' },
  VirtualTextHint    = { link = 'Green' },

  ErrorFloat   = { fg = p.red, bg = p.bg2},
  WarningFloat = { fg = p.yellow, bg = p.bg2},
  InfoFloat    = { fg = p.blue, bg = p.bg2 },
  HintFloat    = { fg = p.green, bg = p.bg2 },


  TSStrong             = { bold = true },
  TSEmphasis           = { bold = true },
  TSUnderline          = { underline = true },
  TSNote               = { fg = p.bg0, bg = p.blue, bold = true },
  TSWarning            = { fg = p.bg0, bg = p.yellow, bold = true },
  TSDanger             = { fg = p.bg0, bg = p.red, bold = true },
  TSAnnotation         = { link = 'Purple' },
  TSAttribute          = { link = 'Purple' },
  TSBoolean            = { link = 'Purple' },
  TSCharacter          = { link = 'Aqua' },
  TSComment            = { link = 'Comment' },
  TSConditional        = { link = 'Red' },
  TSConstBuiltin       = { link = 'BlueItalic' },
  TSConstMacro         = { link = 'BlueItalic' },
  TSConstant           = { link = 'Fg' },
  TSConstructor        = { link = 'GreenBold' },
  TSException          = { link = 'Red' },
  TSField              = { link = 'Green' },
  TSFloat              = { link = 'Purple' },
  TSFuncBuiltin        = { link = 'GreenBold' },
  TSFuncMacro          = { link = 'GreenBold' },
  TSFunction           = { link = 'GreenBold' },
  TSInclude            = { link = 'Red' },
  TSKeyword            = { link = 'Red' },
  TSKeywordFunction    = { link = 'Red' },
  TSKeywordOperator    = { link = 'Orange' },
  TSLabel              = { link = 'Orange' },
  TSMethod             = { link = 'GreenBold' },
  TSNamespace          = { link = 'YellowItalic' },
  TSNone               = { link = 'Fg' },
  TSNumber             = { link = 'Purple' },
  TSOperator           = { link = 'Orange' },
  TSParameter          = { link = 'Fg' },
  TSParameterReference = { link = 'Fg' },
  TSProperty           = { link = 'Fg' },
  TSPunctBracket       = { link = 'Fg' },
  TSPunctDelimiter     = { link = 'Grey' },
  TSPunctSpecial       = { link = 'Blue' },
  TSRepeat             = { link = 'Red' },
  TSString             = { link = 'Aqua' },
  TSStringEscape       = { link = 'Green' },
  TSStringRegex        = { link = 'Green' },
  TSStructure          = { link = 'BlueItalic' },
  TSSymbol             = { link = 'Fg' },
  TSTag                = { link = 'Orange' },
  TSTagDelimiter       = { link = 'Green' },
  TSText               = { link = 'Green' },
  TSStrike             = { link = 'Grey' },
  TSMath               = { link = 'Blue' },
  TSType               = { link = 'Yellow' },
  TSTypeBuiltin        = { link = 'YellowItalic' },
  TSURI                = { link = 'markdownUrl' },
  TSVariable           = { link = 'Fg' },
  TSVariableBuiltin    = { link = 'BlueItalic' },

  MatchParenCur = { bold = true },
  MatchWord     = { underline = true },
  MatchWordCur  = { underline = true },

  CmpItemAbbrMatch         = { fg = p.green, bold = true },
  CmpItemAbbrMatchFuzzy    = { fg = p.green, bold = true },
  CmpItemAbbr              = { link = 'Fg' },
  CmpItemAbbrDeprecated    = { link = 'Fg' },
  CmpItemMenu              = { link = 'Fg' },
  CmpItemKind              = { link = 'Yellow' },
  CmpItemKindText          = { link = 'Fg' },
  CmpItemKindMethod        = { link = 'Green' },
  CmpItemKindFunction      = { link = 'Green' },
  CmpItemKindConstructor   = { link = 'Green' },
  CmpItemKindField         = { link = 'Green' },
  CmpItemKindVariable      = { link = 'Blue' },
  CmpItemKindClass         = { link = 'Yellow' },
  CmpItemKindInterface     = { link = 'Yellow' },
  CmpItemKindModule        = { link = 'Yellow' },
  CmpItemKindProperty      = { link = 'Blue' },
  CmpItemKindUnit          = { link = 'Purple' },
  CmpItemKindValue         = { link = 'Purple' },
  CmpItemKindEnum          = { link = 'Yellow' },
  CmpItemKindKeyword       = { link = 'Red' },
  CmpItemKindSnippet       = { link = 'Aqua' },
  CmpItemKindColor         = { link = 'Aqua' },
  CmpItemKindFile          = { link = 'Aqua' },
  CmpItemKindReference     = { link = 'Aqua' },
  CmpItemKindFolder        = { link = 'Aqua' },
  CmpItemKindEnumMember    = { link = 'Purple' },
  CmpItemKindConstant      = { link = 'Blue' },
  CmpItemKindStruct        = { link = 'Yellow' },
  CmpItemKindEvent         = { link = 'Orange' },
  CmpItemKindOperator      = { link = 'Orange' },
  CmpItemKindTypeParameter = { link = 'Yellow' },

  TelescopeMatching     = { fg = p.green, bold = true },
  TelescopeBorder       = { link = 'Grey' },
  TelescopePromptPrefix = { link = 'Orange' },
  TelescopeSelection    = { link = 'CursorLine' },

  GitSignsChange           = { fg = "#0c7d9d", bg = p.bg1 },
  GitSignsDelete           = { fg = "#94151b", bg = p.bg1 },
  GitSignsAdd              = { fg = "#587c0c", bg = p.bg1 },
  GitSignsAddNr            = { link = 'Green' },
  GitSignsChangeNr         = { link = 'Blue' },
  GitSignsDeleteNr         = { link = 'Red' },
  GitSignsAddLn            = { link = 'DiffAdd' },
  GitSignsChangeLn         = { link = 'DiffChange' },
  GitSignsDeleteLn         = { link = 'DiffDelete' },
  GitSignsCurrentLineBlame = { link = 'Grey' },

  IndentBlanklineContextChar = { fg = p.bg3 },
  IndentBlanklineChar = { fg = p.bg2 },

  diffAdded     = { link = 'Green' },
  diffRemoved   = { link = 'Red' },
  diffChanged   = { link = 'Blue' },
  diffOldFile   = { link = 'Yellow' },
  diffNewFile   = { link = 'Orange' },
  diffFile      = { link = 'Aqua' },
  diffLine      = { link = 'Grey' },
  diffIndexLine = { link = 'Purple' },

  NvimTreeSymlink                   = { link = 'Fg' },
  NvimTreeFolderName                = { link = 'Green' },
  NvimTreeRootFolder                = { link = 'Grey' },
  NvimTreeFolderIcon                = { link = 'Orange' },
  NvimTreeEmptyFolderName           = { link = 'Green' },
  NvimTreeOpenedFolderName          = { link = 'Green' },
  NvimTreeExecFile                  = { link = 'Fg' },
  NvimTreeOpenedFile                = { link = 'Fg' },
  NvimTreeSpecialFile               = { link = 'Fg' },
  NvimTreeImageFile                 = { link = 'Fg' },
  NvimTreeMarkdownFile              = { link = 'Fg' },
  NvimTreeIndentMarker              = { link = 'Grey' },
  NvimTreeGitDirty                  = { link = 'Yellow' },
  NvimTreeGitStaged                 = { link = 'Green' },
  NvimTreeGitMerge                  = { link = 'Orange' },
  NvimTreeGitRenamed                = { link = 'Purple' },
  NvimTreeGitNew                    = { link = 'Aqua' },
  NvimTreeGitDeleted                = { link = 'Red' },
  NvimTreeLspDiagnosticsError       = { link = 'RedSign' },
  NvimTreeLspDiagnosticsWarning     = { link = 'YellowSign' },
  NvimTreeLspDiagnosticsInformation = { link = 'BlueSign' },
  NvimTreeLspDiagnosticsHint        = { link = 'GreenSign' },

  helpNote           = { fg = p.purple, bold = true },
  helpHeadline       = { fg = p.red, bold = true },
  helpHeader         = { fg = p.orange, bold = true },
  helpTSError          = { fg = p.red, bold = true },
  helpURL            = { fg = p.green, underline = true },
  helpHyperTextEntry = { fg = p.yellow, bold = true },
  helpTSURI          = { fg = p.purple },
  helpTSLiteral      = { fg = p.green, bold = true },
  helpHyperTextJump  = { link = 'Yellow' },
  helpCommand        = { link = 'Aqua' },
  helpExample        = { link = 'Green' },
  helpSpecial        = { link = 'Blue' },
  helpSectionDelim   = { link = 'Grey' },

  UltestPass    = { fg = p.green, bg = p.bg1 },
  UltestFail    = { fg = p.red, bg = p.bg1 },
  UltestRunning = { fg = p.yellow, bg = p.bg1 },

  LspSagaCodeActionTitle        = { fg = p.green, bg = p.bg1 },
  LspSagaCodeActionBorder       = { fg = p.green, bg = p.bg1 },
  LspSagaCodeActionTruncateLine = { fg = p.green, bg = p.bg1 },
  LspSagaCodeActionContent      = { fg = p.green, bg = p.bg1 },

  OperatorSandwichChange = { bg = p.fg_diff_text_blue },
  OperatorSandwichDelete = { fg = p.bg0, bg = p.red },
  OperatorSandwichAdd    = { fg = p.bg0, bg = p.green },
}

for group_name, group_settings in pairs(highlight_groups) do
  vim.api.nvim_set_hl(0, group_name, group_settings)
end
